{"ast":null,"code":"var _jsxFileName = \"/home/subhash/Documents/last/lst_2/client/src/core/Comment.js\";\nimport React, { Component } from 'react';\nimport { comment, uncomment, isAuthenciate } from '../auth/index';\nimport { Link } from 'react-router-dom';\n\nclass Comment extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      text: \"\",\n      error: \"\"\n    };\n\n    this.handleChange = event => {\n      this.setState({\n        error: \"\"\n      });\n      this.setState({\n        text: event.target.value\n      });\n    };\n\n    this.addComment = e => {\n      e.preventDefault();\n\n      if (!isAuthenciate()) {\n        this.setState({\n          error: \"Please signin to leave a comment\"\n        });\n        return false;\n      }\n\n      if (this.isValid()) {\n        const userId = isAuthenciate().user._id;\n\n        const token = isAuthenciate().token;\n        const postId = this.props.postId;\n        comment(userId, token, postId, {\n          text: this.state.text\n        }).then(data => {\n          if (data.error) {\n            console.log(data.error);\n          } else {\n            this.setState({\n              text: \"\"\n            }); // dispatch fresh list of coments to parent (SinglePost)\n\n            this.props.updateComments(data.comments);\n          }\n        });\n      }\n    };\n\n    this.deleteComment = comment => {\n      const userId = isAuthenciate().user._id;\n\n      const token = isAuthenciate().token;\n      const postId = this.props.postId;\n      uncomment(userId, token, postId, comment).then(data => {\n        if (data.error) {\n          console.log(data.error);\n        } else {\n          this.props.updateComments(data.comments);\n        }\n      });\n    };\n\n    this.deleteConfirmed = comment => {\n      let answer = window.confirm(\"Are you sure you want to delete your comment?\");\n\n      if (answer) {\n        this.deleteComment(comment);\n      }\n    };\n  }\n\n  render() {\n    const comments = this.props.comments;\n    const error = this.state.error;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      className: \"mt-5 mb-5\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, \"Leave a comment\"), React.createElement(\"form\", {\n      onSubmit: this.addComment,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"form-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"text\",\n      onChange: this.handleChange,\n      value: this.state.text,\n      className: \"form-control\",\n      placeholder: \"Leave a comment...\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }), React.createElement(\"button\", {\n      className: \"btn btn-raised btn-success mt-2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, \"Post\"))), React.createElement(\"div\", {\n      className: \"alert alert-danger\",\n      style: {\n        display: error ? \"\" : \"none\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, error), React.createElement(\"div\", {\n      className: \"col-md-12\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, React.createElement(\"h3\", {\n      className: \"text-primary\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, comments.length, \" Comments\"), React.createElement(\"hr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }), comments.map((comment, i) => React.createElement(\"div\", {\n      key: i,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }, React.createElement(Link, {\n      to: \"/user/\".concat(comment.postedBy._id),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      style: {\n        borderRadius: \"50%\",\n        border: \"1px solid black\"\n      },\n      className: \"float-left mr-2\",\n      height: \"30px\",\n      width: \"30px\",\n      onError: i => i.target.src = \"\".concat(DefaultProfile),\n      src: \"/user/photo/\".concat(comment.postedBy._id),\n      alt: comment.postedBy.name,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      className: \"lead\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    }, comment.text), React.createElement(\"p\", {\n      className: \"font-italic mark\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    }, \"Posted by\", \" \", React.createElement(Link, {\n      to: \"/user/\".concat(comment.postedBy._id),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    }, comment.postedBy.name, \" \"), \"on\", \" \", new Date(comment.created).toDateString(), React.createElement(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131\n      },\n      __self: this\n    }, isAuthenciate().user && isAuthenciate().user._id === comment.postedBy._id && React.createElement(React.Fragment, null, React.createElement(\"span\", {\n      onClick: () => this.deleteConfirmed(comment),\n      className: \"text-danger float-right mr-1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136\n      },\n      __self: this\n    }, \"Remove\"))))))))));\n  }\n\n}\n\nexport default Comment;","map":{"version":3,"sources":["/home/subhash/Documents/last/lst_2/client/src/core/Comment.js"],"names":["React","Component","comment","uncomment","isAuthenciate","Link","Comment","state","text","error","handleChange","event","setState","target","value","addComment","e","preventDefault","isValid","userId","user","_id","token","postId","props","then","data","console","log","updateComments","comments","deleteComment","deleteConfirmed","answer","window","confirm","render","display","length","map","i","postedBy","borderRadius","border","src","DefaultProfile","name","Date","created","toDateString"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport {comment, uncomment, isAuthenciate} from '../auth/index';\nimport { Link } from 'react-router-dom';\n\nclass Comment extends Component {\n    state = {\n        text: \"\",\n        error: \"\"\n    };\n\n    handleChange = event => {\n        this.setState({ error: \"\" });\n        this.setState({ text: event.target.value });\n    };\n\n    addComment = e => {\n        e.preventDefault();\n\n        if (!isAuthenciate()) {\n            this.setState({ error: \"Please signin to leave a comment\" });\n            return false;\n        }\n\n        if (this.isValid()) {\n            const userId = isAuthenciate().user._id;\n            const token = isAuthenciate().token;\n            const postId = this.props.postId;\n\n            comment(userId, token, postId, { text: this.state.text }).then(\n                data => {\n                    if (data.error) {\n                        console.log(data.error);\n                    } else {\n                        this.setState({ text: \"\" });\n                        // dispatch fresh list of coments to parent (SinglePost)\n                        this.props.updateComments(data.comments);\n                    }\n                }\n            );\n        }\n    };\n\n    deleteComment = comment => {\n        const userId = isAuthenciate().user._id;\n        const token = isAuthenciate().token;\n        const postId = this.props.postId;\n\n        uncomment(userId, token, postId, comment).then(data => {\n            if (data.error) {\n                console.log(data.error);\n            } else {\n                this.props.updateComments(data.comments);\n            }\n        });\n    };\n\n    deleteConfirmed = comment => {\n        let answer = window.confirm(\n            \"Are you sure you want to delete your comment?\"\n        );\n        if (answer) {\n            this.deleteComment(comment);\n        }\n    };\n\n    render() {\n        const { comments } = this.props;\n        const { error } = this.state;\n\n        return (\n            <div>\n                <h2 className=\"mt-5 mb-5\">Leave a comment</h2>\n\n                <form onSubmit={this.addComment}>\n                    <div className=\"form-group\">\n                        <input\n                            type=\"text\"\n                            onChange={this.handleChange}\n                            value={this.state.text}\n                            className=\"form-control\"\n                            placeholder=\"Leave a comment...\"\n                        />\n                        <button className=\"btn btn-raised btn-success mt-2\">\n                            Post\n                        </button>\n                    </div>\n                </form>\n\n                <div\n                    className=\"alert alert-danger\"\n                    style={{ display: error ? \"\" : \"none\" }}\n                >\n                    {error}\n                </div>\n\n                <div className=\"col-md-12\">\n                    <h3 className=\"text-primary\">{comments.length} Comments</h3>\n                    <hr />\n                    {comments.map((comment, i) => (\n                        <div key={i}>\n                            <div>\n                                <Link to={`/user/${comment.postedBy._id}`}>\n                                    <img\n                                        style={{\n                                            borderRadius: \"50%\",\n                                            border: \"1px solid black\"\n                                        }}\n                                        className=\"float-left mr-2\"\n                                        height=\"30px\"\n                                        width=\"30px\"\n                                        onError={i =>\n                                            (i.target.src = `${DefaultProfile}`)\n                                        }\n                                        src={`/user/photo/${comment.postedBy._id}`}\n                                        alt={comment.postedBy.name}\n                                    />\n                                </Link>\n                                <div>\n                                    <p className=\"lead\">{comment.text}</p>\n                                    <p className=\"font-italic mark\">\n                                        Posted by{\" \"}\n                                        <Link\n                                            to={`/user/${comment.postedBy._id}`}\n                                        >\n                                            {comment.postedBy.name}{\" \"}\n                                        </Link>\n                                        on{\" \"}\n                                        {new Date(\n                                            comment.created\n                                        ).toDateString()}\n                                        <span>\n                                            {isAuthenciate().user &&\n                                                isAuthenciate().user._id ===\n                                                    comment.postedBy._id && (\n                                                    <>\n                                                        <span\n                                                            onClick={() =>\n                                                                this.deleteConfirmed(\n                                                                    comment\n                                                                )\n                                                            }\n                                                            className=\"text-danger float-right mr-1\"\n                                                        >\n                                                            Remove\n                                                        </span>\n                                                    </>\n                                                )}\n                                        </span>\n                                    </p>\n                                </div>\n                            </div>\n                        </div>\n                    ))}\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Comment;"]},"metadata":{},"sourceType":"module"}