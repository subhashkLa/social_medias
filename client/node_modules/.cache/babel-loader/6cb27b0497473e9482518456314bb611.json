{"ast":null,"code":"var _jsxFileName = \"/home/subhash/Documents/last/lst_2/client/src/core/Userpost.js\";\nimport React, { Component } from 'react';\nimport { isAuthenciate, like, unlike, singlePost } from '../auth/index';\nimport { Link, Redirect } from 'react-router-dom';\n\nclass Userpost extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      post: '',\n      redirectToHome: false,\n      redirectToSignin: false,\n      like: false,\n      likes: 0\n    };\n\n    this.componentDidMount = () => {\n      const postId = this.props.match.params.postId;\n      singlePost(postId).then(data => {\n        if (data.error) {\n          console.log(data.error);\n        } else {\n          this.setState({\n            post: data\n          });\n        }\n      });\n    };\n\n    this.renderPost = post => {\n      const posterId = post.postedBy ? \"/user/\".concat(post.postedBy._id) : '';\n      const posterName = post.postedBy ? post.postedBy.name : ' Unknown';\n      return React.createElement(\"div\", {\n        className: \"card-body\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        src: \"/post/photo/\".concat(post._id),\n        alt: post.title,\n        onError: i => i.target.src = \"https://i.stack.imgur.com/l60Hf.pnghttps://i.stack.imgur.com/l60Hf.png\",\n        className: \"img-thunbnail mb-3\",\n        style: {\n          height: '300px',\n          width: '100%',\n          objectFit: 'cover'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }), React.createElement(\"p\", {\n        className: \"card-text\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }, post.body), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }), React.createElement(\"p\", {\n        className: \"font-italic mark\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }, \"Posted by \", React.createElement(Link, {\n        to: \"\".concat(posterId),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }, posterName, \" \"), \"on \", new Date(post.created).toDateString()), React.createElement(\"div\", {\n        className: \"d-inline-block\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }, React.createElement(Link, {\n        to: \"/\",\n        className: \"btn btn-raised btn-primary btn-sm mr-5\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }, \"Back to posts\"), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        },\n        __self: this\n      })));\n    };\n  }\n\n  render() {\n    const _this$state = this.state,\n          post = _this$state.post,\n          redirectToHome = _this$state.redirectToHome,\n          redirectToSignin = _this$state.redirectToSignin,\n          comments = _this$state.comments;\n\n    if (redirectToHome) {\n      return React.createElement(Redirect, {\n        to: \"/\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117\n        },\n        __self: this\n      });\n    } else if (redirectToSignin) {\n      return React.createElement(Redirect, {\n        to: \"/signin\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119\n        },\n        __self: this\n      });\n    }\n\n    return React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      className: \"display-2 mt-5 mb-5\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    }, post.title), !post ? React.createElement(\"div\", {\n      className: \"jumbotron text-center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128\n      },\n      __self: this\n    }, \"Loading...\")) : this.renderPost(post));\n  }\n\n}\n\nexport default Userpost;","map":{"version":3,"sources":["/home/subhash/Documents/last/lst_2/client/src/core/Userpost.js"],"names":["React","Component","isAuthenciate","like","unlike","singlePost","Link","Redirect","Userpost","state","post","redirectToHome","redirectToSignin","likes","componentDidMount","postId","props","match","params","then","data","error","console","log","setState","renderPost","posterId","postedBy","_id","posterName","name","title","i","target","src","height","width","objectFit","body","Date","created","toDateString","render","comments"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,aAAT,EAAwBC,IAAxB,EAA8BC,MAA9B,EAAsCC,UAAtC,QAAwD,eAAxD;AACA,SAASC,IAAT,EAAeC,QAAf,QAA+B,kBAA/B;;AAEA,MAAMC,QAAN,SAAuBP,SAAvB,CAAiC;AAAA;AAAA;AAAA,SAC7BQ,KAD6B,GACrB;AACJC,MAAAA,IAAI,EAAE,EADF;AAEJC,MAAAA,cAAc,EAAE,KAFZ;AAGJC,MAAAA,gBAAgB,EAAE,KAHd;AAIJT,MAAAA,IAAI,EAAE,KAJF;AAKJU,MAAAA,KAAK,EAAE;AALH,KADqB;;AAAA,SAS7BC,iBAT6B,GAST,MAAM;AACtB,YAAMC,MAAM,GAAG,KAAKC,KAAL,CAAWC,KAAX,CAAiBC,MAAjB,CAAwBH,MAAvC;AACAV,MAAAA,UAAU,CAACU,MAAD,CAAV,CAAmBI,IAAnB,CAAwBC,IAAI,IAAI;AAC5B,YAAIA,IAAI,CAACC,KAAT,EAAgB;AACZC,UAAAA,OAAO,CAACC,GAAR,CAAYH,IAAI,CAACC,KAAjB;AACH,SAFD,MAEO;AACH,eAAKG,QAAL,CAAc;AACVd,YAAAA,IAAI,EAAEU;AADI,WAAd;AAGH;AACJ,OARD;AASH,KApB4B;;AAAA,SA4C7BK,UA5C6B,GA4ChBf,IAAI,IAAI;AACjB,YAAMgB,QAAQ,GAAGhB,IAAI,CAACiB,QAAL,mBAAyBjB,IAAI,CAACiB,QAAL,CAAcC,GAAvC,IAA+C,EAAhE;AACA,YAAMC,UAAU,GAAGnB,IAAI,CAACiB,QAAL,GAAgBjB,IAAI,CAACiB,QAAL,CAAcG,IAA9B,GAAqC,UAAxD;AAEA,aACI;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AACI,QAAA,GAAG,wBAAiBpB,IAAI,CAACkB,GAAtB,CADP;AAEI,QAAA,GAAG,EAAElB,IAAI,CAACqB,KAFd;AAGI,QAAA,OAAO,EAAEC,CAAC,IAAKA,CAAC,CAACC,MAAF,CAASC,GAAT,GAAe,wEAHlC;AAII,QAAA,SAAS,EAAC,oBAJd;AAKI,QAAA,KAAK,EAAE;AACHC,UAAAA,MAAM,EAAE,OADL;AAEHC,UAAAA,KAAK,EAAE,MAFJ;AAGHC,UAAAA,SAAS,EAAE;AAHR,SALX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,EAaI;AAAG,QAAA,SAAS,EAAC,WAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAA0B3B,IAAI,CAAC4B,IAA/B,CAbJ,EAcI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAdJ,EAeI;AAAG,QAAA,SAAS,EAAC,kBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBACc,oBAAC,IAAD;AAAM,QAAA,EAAE,YAAKZ,QAAL,CAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAA0BG,UAA1B,MADd,SAEQ,IAAIU,IAAJ,CAAS7B,IAAI,CAAC8B,OAAd,EAAuBC,YAAvB,EAFR,CAfJ,EAmBI;AAAK,QAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,IAAD;AAAM,QAAA,EAAE,KAAR;AAAe,QAAA,SAAS,EAAC,wCAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBADJ,EAgBI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAhBJ,CAnBJ,CADJ;AA0DH,KA1G4B;AAAA;;AA4G7BC,EAAAA,MAAM,GAAG;AAAA,wBACwD,KAAKjC,KAD7D;AAAA,UACGC,IADH,eACGA,IADH;AAAA,UACSC,cADT,eACSA,cADT;AAAA,UACyBC,gBADzB,eACyBA,gBADzB;AAAA,UAC2C+B,QAD3C,eAC2CA,QAD3C;;AAGL,QAAIhC,cAAJ,EAAoB;AAChB,aAAO,oBAAC,QAAD;AAAU,QAAA,EAAE,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AACH,KAFD,MAEO,IAAIC,gBAAJ,EAAsB;AACzB,aAAO,oBAAC,QAAD;AAAU,QAAA,EAAE,WAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AACH;;AAED,WACI;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAI,MAAA,SAAS,EAAC,qBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAqCF,IAAI,CAACqB,KAA1C,CADJ,EAGK,CAACrB,IAAD,GACG;AAAK,MAAA,SAAS,EAAC,uBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ,CADH,GAKG,KAAKe,UAAL,CAAgBf,IAAhB,CARR,CADJ;AAeH;;AApI4B;;AAsIjC,eAAeF,QAAf","sourcesContent":["import React, { Component } from 'react';\nimport { isAuthenciate, like, unlike, singlePost } from '../auth/index';\nimport { Link, Redirect } from 'react-router-dom';\n\nclass Userpost extends Component {\n    state = {\n        post: '',\n        redirectToHome: false,\n        redirectToSignin: false,\n        like: false,\n        likes: 0,\n    };\n\n    componentDidMount = () => {\n        const postId = this.props.match.params.postId;\n        singlePost(postId).then(data => {\n            if (data.error) {\n                console.log(data.error);\n            } else {\n                this.setState({\n                    post: data\n                });\n            }\n        });\n    };\n\n    // likeToggle = () => {\n    //     if (!isAuthenciate()) {\n    //         this.setState({ redirectToSignin: true });\n    //         return false;\n    //     }\n    //     let callApi = this.state.like ? unlike : like;\n    //     const userId = isAuthenciate().user._id;\n    //     const postId = this.state.post._id;\n    //     const token = isAuthenciate().token;\n\n    //     callApi(userId, token, postId).then(data => {\n    //         if (data.error) {\n    //             console.log(data.error);\n    //         } else {\n    //             this.setState({\n    //                 like: !this.state.like,\n    //                 likes: data.likes.length\n    //             });\n    //         }\n    //     });\n    // };\n\n    renderPost = post => {\n        const posterId = post.postedBy ? `/user/${post.postedBy._id}` : '';\n        const posterName = post.postedBy ? post.postedBy.name : ' Unknown';\n\n        return (\n            <div className=\"card-body\">\n                <img\n                    src={`/post/photo/${post._id}`}\n                    alt={post.title}\n                    onError={i => (i.target.src = \"https://i.stack.imgur.com/l60Hf.pnghttps://i.stack.imgur.com/l60Hf.png\")}\n                    className=\"img-thunbnail mb-3\"\n                    style={{\n                        height: '300px',\n                        width: '100%',\n                        objectFit: 'cover'\n                    }}\n                />\n\n                <p className=\"card-text\">{post.body}</p>\n                <br />\n                <p className=\"font-italic mark\">\n                    Posted by <Link to={`${posterId}`}>{posterName} </Link>\n                    on {new Date(post.created).toDateString()}\n                </p>\n                <div className=\"d-inline-block\">\n                    <Link to={`/`} className=\"btn btn-raised btn-primary btn-sm mr-5\">\n                        Back to posts\n                    </Link>\n\n                    {/* {isAuthenciate().user && isAuthenciate().user._id === post.postedBy._id && (\n                        <>\n                            <Link to={`/post/edit/${post._id}`} className=\"btn btn-raised btn-warning btn-sm mr-5\">\n                                Update Post\n                            </Link>\n                            <button onClick={this.deleteConfirmed} className=\"btn btn-raised btn-danger\">\n                                Delete Post\n                            </button>\n                        </>\n                    )} */}\n\n                    <div>\n                        {/* {isAuthenciate().user && isAuthenciate().user.role === 'admin' && (\n                            <div class=\"card mt-5\">\n                                <div className=\"card-body\">\n                                    <h5 className=\"card-title\">Admin</h5>\n                                    <p className=\"mb-2 text-danger\">Edit/Delete as an Admin</p>\n                                    <Link\n                                        to={`/post/edit/${post._id}`}\n                                        className=\"btn btn-raised btn-warning btn-sm mr-5\"\n                                    >\n                                        Update Post\n                                    </Link>\n                                    <button onClick={this.deleteConfirmed} className=\"btn btn-raised btn-danger\">\n                                        Delete Post\n                                    </button>\n                                </div>\n                            </div>\n                        )} */}\n                    </div>\n                </div>\n            </div>\n        );\n    };\n\n    render() {\n        const { post, redirectToHome, redirectToSignin, comments } = this.state;\n\n        if (redirectToHome) {\n            return <Redirect to={`/`} />;\n        } else if (redirectToSignin) {\n            return <Redirect to={`/signin`} />;\n        }\n\n        return (\n            <div className=\"container\">\n                <h2 className=\"display-2 mt-5 mb-5\">{post.title}</h2>\n\n                {!post ? (\n                    <div className=\"jumbotron text-center\">\n                        <h2>Loading...</h2>\n                    </div>\n                ) : (\n                    this.renderPost(post)\n                )}\n\n                {/* <Comment postId={post._id} comments={comments.reverse()} updateComments={this.updateComments} /> */}\n            </div>\n        );\n    }}\n\nexport default Userpost;"]},"metadata":{},"sourceType":"module"}