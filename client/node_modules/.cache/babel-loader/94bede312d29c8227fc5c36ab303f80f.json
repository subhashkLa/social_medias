{"ast":null,"code":"export const signup = User => {\n  return fetch(\"/signup\", {\n    method: \"POST\",\n    headers: {\n      Accept: \"application/json\",\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify(User)\n  }).then(data => {\n    return data.json();\n  }).catch(err => console.log(err));\n};\nexport const signin = User => {\n  return fetch(\"/signin\", {\n    method: \"POST\",\n    headers: {\n      Accept: \"application/json\",\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify(User)\n  }).then(data => {\n    return data.json();\n  }).catch(err => console.log(err));\n};\nexport const Signout = next => {\n  if (typeof window !== \"undefined\") {\n    localStorage.removeItem(\"jwt\");\n    next();\n  }\n\n  return fetch(\"/signout\", {\n    method: \"GET\"\n  }).then(data => {\n    console.log(\"signout\", data);\n    return data.json();\n  }).catch(err => console.log(err));\n};\nexport const authenciate = (jwt, next) => {\n  if (typeof window !== \"undefined\") {\n    localStorage.setItem(\"jwt\", JSON.stringify(jwt));\n    next();\n  }\n};\nexport const isAuthenciate = () => {\n  if (typeof window == \"undefined\") {\n    return false;\n  }\n\n  if (localStorage.getItem(\"jwt\")) {\n    return JSON.parse(localStorage.getItem(\"jwt\"));\n  } else {\n    return false;\n  }\n};\nexport const user = () => {\n  return fetch('/user', {\n    method: \"GET\"\n  }).then(data => {\n    return data.json();\n  });\n};\nexport const read = (userId, token) => {\n  return fetch(\"/user/\".concat(userId), {\n    method: \"GET\",\n    headers: {\n      Accept: \"application/json\",\n      \"Content-Type\": \"application/json\",\n      Authorization: \"Bearer \".concat(token)\n    }\n  }).then(response => {\n    return response.json();\n  });\n};\nexport const edit = (userId, token, user) => {\n  console.log(\"User Data Update\", user);\n  return fetch(\"/user/\".concat(userId), {\n    method: \"PUT\",\n    headers: {\n      Accept: \"application/json\",\n      Authorization: \"Bearer \".concat(token)\n    },\n    body: user\n  }).then(response => {\n    return response.json();\n  }).catch(err => {\n    console.log(err);\n  });\n}; //post\n\nexport const post = (Post, userId, token) => {\n  console.log(Post);\n  return fetch(\"/post/new/\".concat(userId), {\n    method: \"POST\",\n    headers: {\n      Accept: \"application/json\",\n      Authorization: \"Bearer \".concat(token)\n    },\n    body: Post\n  }).then(data => {\n    return data.json();\n  }).catch(err => {\n    console.log(err);\n  });\n};\nexport const allpost = () => {\n  return fetch('/post', {\n    method: \"GET\"\n  }).then(data => {\n    return data.json();\n  });\n};\nexport const singlePost = postId => {\n  return fetch(\"/post/\".concat(postId), {\n    method: \"GET\"\n  }).then(response => {\n    return response.json();\n  }).catch(err => console.log(err));\n};\nexport const postByUser = userId => {\n  return fetch(\"/user/post/\".concat(userId), {\n    method: \"GET\"\n  }).then(response => {\n    return response.json();\n  }).catch(err => console.log(err));\n};\nexport const like = (userId, token, postId) => {\n  return fetch(\"/post/likes\", {\n    method: \"PUT\",\n    headers: {\n      Accept: \"application/json\",\n      \"Content-Type\": \"application/json\",\n      Authorization: \"Bearer \".concat(token)\n    },\n    body: JSON.stringify({\n      userId,\n      postId\n    })\n  }).then(response => {\n    return response.json();\n  }).catch(err => {\n    console.log(err);\n  });\n};\nexport const unlike = (userId, token, postId) => {\n  return fetch(\"/post/unlikes\", {\n    method: \"PUT\",\n    headers: {\n      Accept: \"application/json\",\n      \"Content-Type\": \"application/json\",\n      Authorization: \"Bearer \".concat(token)\n    },\n    body: JSON.stringify({\n      userId,\n      postId\n    })\n  }).then(response => {\n    return response.json();\n  }).catch(err => {\n    console.log(err);\n  });\n};\nexport const comment = (userId, token, postId, comment) => {\n  return fetch(\"/post/comment\", {\n    method: \"PUT\",\n    headers: {\n      Accept: \"application/json\",\n      \"Content-Type\": \"application/json\",\n      Authorization: \"Bearer \".concat(token)\n    },\n    body: JSON.stringify({\n      userId,\n      postId,\n      comment\n    })\n  }).then(response => {\n    return response.json();\n  }).catch(err => {\n    console.log(err);\n  });\n};\nexport const uncomment = (userId, token, postId, comment) => {\n  return fetch(\"/post/uncomment\", {\n    method: \"PUT\",\n    headers: {\n      Accept: \"application/json\",\n      \"Content-Type\": \"application/json\",\n      Authorization: \"Bearer \".concat(token)\n    },\n    body: JSON.stringify({\n      userId,\n      postId,\n      comment\n    })\n  }).then(response => {\n    return response.json();\n  }).catch(err => {\n    console.log(err);\n  });\n};\nexport const follow = (userId, token, followId) => {\n  return fetch(\"\".concat(process.env.REACT_APP_API_URL, \"/user/follow\"), {\n    method: \"PUT\",\n    headers: {\n      Accept: \"application/json\",\n      \"Content-Type\": \"application/json\",\n      Authorization: \"Bearer \".concat(token)\n    },\n    body: JSON.stringify({\n      userId,\n      followId\n    })\n  }).then(response => {\n    return response.json();\n  }).catch(err => console.log(err));\n};\nexport const unfollow = (userId, token, unfollowId) => {\n  return fetch(\"\".concat(process.env.REACT_APP_API_URL, \"/user/unfollow\"), {\n    method: \"PUT\",\n    headers: {\n      Accept: \"application/json\",\n      \"Content-Type\": \"application/json\",\n      Authorization: \"Bearer \".concat(token)\n    },\n    body: JSON.stringify({\n      userId,\n      unfollowId\n    })\n  }).then(response => {\n    return response.json();\n  }).catch(err => console.log(err));\n};","map":{"version":3,"sources":["/home/subhash/Documents/last/lst_2/client/src/auth/index.js"],"names":["signup","User","fetch","method","headers","Accept","body","JSON","stringify","then","data","json","catch","err","console","log","signin","Signout","next","window","localStorage","removeItem","authenciate","jwt","setItem","isAuthenciate","getItem","parse","user","read","userId","token","Authorization","response","edit","post","Post","allpost","singlePost","postId","postByUser","like","unlike","comment","uncomment","follow","followId","process","env","REACT_APP_API_URL","unfollow","unfollowId"],"mappings":"AAAA,OAAO,MAAMA,MAAM,GAAGC,IAAI,IAAI;AAC1B,SAAOC,KAAK,CAAC,SAAD,EAAY;AACpBC,IAAAA,MAAM,EAAE,MADY;AAEpBC,IAAAA,OAAO,EAAE;AACLC,MAAAA,MAAM,EAAE,kBADH;AAEL,sBAAgB;AAFX,KAFW;AAMpBC,IAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeP,IAAf;AANc,GAAZ,CAAL,CAQNQ,IARM,CAQDC,IAAI,IAAI;AACV,WAAOA,IAAI,CAACC,IAAL,EAAP;AACH,GAVM,EAWNC,KAXM,CAWAC,GAAG,IAAIC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CAXP,CAAP;AAYH,CAbM;AAeP,OAAO,MAAMG,MAAM,GAAGf,IAAI,IAAI;AAC1B,SAAOC,KAAK,CAAC,SAAD,EAAY;AACpBC,IAAAA,MAAM,EAAE,MADY;AAEpBC,IAAAA,OAAO,EAAE;AACLC,MAAAA,MAAM,EAAE,kBADH;AAEL,sBAAgB;AAFX,KAFW;AAMpBC,IAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeP,IAAf;AANc,GAAZ,CAAL,CAQNQ,IARM,CAQDC,IAAI,IAAI;AACV,WAAOA,IAAI,CAACC,IAAL,EAAP;AACH,GAVM,EAWNC,KAXM,CAWAC,GAAG,IAAIC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CAXP,CAAP;AAYH,CAbM;AAeP,OAAO,MAAMI,OAAO,GAAIC,IAAD,IAAW;AAC9B,MAAG,OAAOC,MAAP,KAAkB,WAArB,EAAkC;AAC9BC,IAAAA,YAAY,CAACC,UAAb,CAAwB,KAAxB;AACAH,IAAAA,IAAI;AACP;;AACD,SAAOhB,KAAK,CAAC,UAAD,EAAa;AACrBC,IAAAA,MAAM,EAAE;AADa,GAAb,CAAL,CAEJM,IAFI,CAECC,IAAI,IAAI;AACZI,IAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBL,IAAvB;AACA,WAAOA,IAAI,CAACC,IAAL,EAAP;AACH,GALM,EAMNC,KANM,CAMAC,GAAG,IAAIC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CANP,CAAP;AAOH,CAZM;AAcP,OAAO,MAAMS,WAAW,GAAG,CAACC,GAAD,EAAML,IAAN,KAAe;AACtC,MAAG,OAAOC,MAAP,KAAkB,WAArB,EAAkC;AAC9BC,IAAAA,YAAY,CAACI,OAAb,CAAqB,KAArB,EAA4BjB,IAAI,CAACC,SAAL,CAAee,GAAf,CAA5B;AACAL,IAAAA,IAAI;AACP;AACJ,CALM;AAOP,OAAO,MAAMO,aAAa,GAAG,MAAM;AAC/B,MAAG,OAAON,MAAP,IAAiB,WAApB,EAAiC;AAC7B,WAAO,KAAP;AACH;;AAED,MAAGC,YAAY,CAACM,OAAb,CAAqB,KAArB,CAAH,EAAgC;AAC5B,WAAOnB,IAAI,CAACoB,KAAL,CAAWP,YAAY,CAACM,OAAb,CAAqB,KAArB,CAAX,CAAP;AACH,GAFD,MAEM;AACF,WAAO,KAAP;AACH;AACJ,CAVM;AAYP,OAAO,MAAME,IAAI,GAAG,MAAM;AACtB,SAAO1B,KAAK,CAAC,OAAD,EAAU;AAClBC,IAAAA,MAAM,EAAE;AADU,GAAV,CAAL,CAEJM,IAFI,CAECC,IAAI,IAAK;AACb,WAAOA,IAAI,CAACC,IAAL,EAAP;AACH,GAJM,CAAP;AAKH,CANM;AAQP,OAAO,MAAMkB,IAAI,GAAG,CAACC,MAAD,EAASC,KAAT,KAAmB;AACnC,SAAO7B,KAAK,iBAAU4B,MAAV,GAAoB;AAC5B3B,IAAAA,MAAM,EAAE,KADoB;AAE5BC,IAAAA,OAAO,EAAE;AACLC,MAAAA,MAAM,EAAE,kBADH;AAEL,sBAAgB,kBAFX;AAGL2B,MAAAA,aAAa,mBAAYD,KAAZ;AAHR;AAFmB,GAApB,CAAL,CAQNtB,IARM,CAQDwB,QAAQ,IAAI;AACd,WAAOA,QAAQ,CAACtB,IAAT,EAAP;AACH,GAVM,CAAP;AAWH,CAZM;AAcP,OAAO,MAAMuB,IAAI,GAAG,CAACJ,MAAD,EAASC,KAAT,EAAgBH,IAAhB,KAAyB;AACzCd,EAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ,EAAgCa,IAAhC;AACA,SAAO1B,KAAK,iBAAU4B,MAAV,GAAoB;AAC5B3B,IAAAA,MAAM,EAAE,KADoB;AAE5BC,IAAAA,OAAO,EAAE;AACLC,MAAAA,MAAM,EAAE,kBADH;AAEL2B,MAAAA,aAAa,mBAAYD,KAAZ;AAFR,KAFmB;AAM5BzB,IAAAA,IAAI,EAAEsB;AANsB,GAApB,CAAL,CAQNnB,IARM,CAQDwB,QAAQ,IAAI;AACd,WAAOA,QAAQ,CAACtB,IAAT,EAAP;AACH,GAVM,EAWNC,KAXM,CAWAC,GAAG,IAAI;AACVC,IAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACH,GAbM,CAAP;AAcH,CAhBM,C,CAkBP;;AAEA,OAAO,MAAMsB,IAAI,GAAG,CAACC,IAAD,EAAON,MAAP,EAAeC,KAAf,KAAyB;AACzCjB,EAAAA,OAAO,CAACC,GAAR,CAAYqB,IAAZ;AACA,SAAOlC,KAAK,qBAAc4B,MAAd,GAAwB;AAChC3B,IAAAA,MAAM,EAAE,MADwB;AAEhCC,IAAAA,OAAO,EAAE;AACLC,MAAAA,MAAM,EAAE,kBADH;AAEL2B,MAAAA,aAAa,mBAAYD,KAAZ;AAFR,KAFuB;AAMhCzB,IAAAA,IAAI,EAAE8B;AAN0B,GAAxB,CAAL,CAQN3B,IARM,CAQDC,IAAI,IAAI;AACV,WAAOA,IAAI,CAACC,IAAL,EAAP;AACH,GAVM,EAWNC,KAXM,CAWAC,GAAG,IAAI;AACVC,IAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACH,GAbM,CAAP;AAcH,CAhBM;AAkBP,OAAO,MAAMwB,OAAO,GAAG,MAAM;AACzB,SAAOnC,KAAK,CAAC,OAAD,EAAU;AAClBC,IAAAA,MAAM,EAAE;AADU,GAAV,CAAL,CAGNM,IAHM,CAGDC,IAAI,IAAI;AACV,WAAOA,IAAI,CAACC,IAAL,EAAP;AACH,GALM,CAAP;AAMH,CAPM;AASP,OAAO,MAAM2B,UAAU,GAAGC,MAAM,IAAI;AAChC,SAAOrC,KAAK,iBAAUqC,MAAV,GAAoB;AAC5BpC,IAAAA,MAAM,EAAE;AADoB,GAApB,CAAL,CAGNM,IAHM,CAGDwB,QAAQ,IAAI;AACd,WAAOA,QAAQ,CAACtB,IAAT,EAAP;AACH,GALM,EAMNC,KANM,CAMAC,GAAG,IAAIC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CANP,CAAP;AAOH,CARM;AAUP,OAAO,MAAM2B,UAAU,GAAGV,MAAM,IAAI;AAChC,SAAO5B,KAAK,sBAAe4B,MAAf,GAAyB;AACjC3B,IAAAA,MAAM,EAAE;AADyB,GAAzB,CAAL,CAGNM,IAHM,CAGDwB,QAAQ,IAAI;AACd,WAAOA,QAAQ,CAACtB,IAAT,EAAP;AACH,GALM,EAMNC,KANM,CAMAC,GAAG,IAAIC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CANP,CAAP;AAOH,CARM;AAUP,OAAO,MAAM4B,IAAI,GAAG,CAACX,MAAD,EAASC,KAAT,EAAgBQ,MAAhB,KAA2B;AAC3C,SAAOrC,KAAK,CAAC,aAAD,EAAgB;AACxBC,IAAAA,MAAM,EAAE,KADgB;AAExBC,IAAAA,OAAO,EAAE;AACLC,MAAAA,MAAM,EAAE,kBADH;AAEL,sBAAgB,kBAFX;AAGL2B,MAAAA,aAAa,mBAAYD,KAAZ;AAHR,KAFe;AAOxBzB,IAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AAACsB,MAAAA,MAAD;AAASS,MAAAA;AAAT,KAAf;AAPkB,GAAhB,CAAL,CASN9B,IATM,CASDwB,QAAQ,IAAI;AACd,WAAOA,QAAQ,CAACtB,IAAT,EAAP;AACH,GAXM,EAYNC,KAZM,CAYAC,GAAG,IAAI;AACVC,IAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACH,GAdM,CAAP;AAeH,CAhBM;AAkBP,OAAO,MAAM6B,MAAM,GAAG,CAACZ,MAAD,EAASC,KAAT,EAAgBQ,MAAhB,KAA2B;AAC7C,SAAOrC,KAAK,CAAC,eAAD,EAAkB;AAC1BC,IAAAA,MAAM,EAAE,KADkB;AAE1BC,IAAAA,OAAO,EAAE;AACLC,MAAAA,MAAM,EAAE,kBADH;AAEL,sBAAgB,kBAFX;AAGL2B,MAAAA,aAAa,mBAAYD,KAAZ;AAHR,KAFiB;AAO1BzB,IAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AAACsB,MAAAA,MAAD;AAASS,MAAAA;AAAT,KAAf;AAPoB,GAAlB,CAAL,CASN9B,IATM,CASDwB,QAAQ,IAAI;AACd,WAAOA,QAAQ,CAACtB,IAAT,EAAP;AACH,GAXM,EAYNC,KAZM,CAYAC,GAAG,IAAI;AACVC,IAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACH,GAdM,CAAP;AAeH,CAhBM;AAkBP,OAAO,MAAM8B,OAAO,GAAG,CAACb,MAAD,EAASC,KAAT,EAAgBQ,MAAhB,EAAwBI,OAAxB,KAAoC;AACvD,SAAOzC,KAAK,CAAC,eAAD,EAAkB;AAC1BC,IAAAA,MAAM,EAAE,KADkB;AAE1BC,IAAAA,OAAO,EAAE;AACLC,MAAAA,MAAM,EAAE,kBADH;AAEL,sBAAgB,kBAFX;AAGL2B,MAAAA,aAAa,mBAAYD,KAAZ;AAHR,KAFiB;AAO1BzB,IAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AAACsB,MAAAA,MAAD;AAASS,MAAAA,MAAT;AAAiBI,MAAAA;AAAjB,KAAf;AAPoB,GAAlB,CAAL,CASNlC,IATM,CASDwB,QAAQ,IAAI;AACd,WAAOA,QAAQ,CAACtB,IAAT,EAAP;AACH,GAXM,EAYNC,KAZM,CAYAC,GAAG,IAAI;AACVC,IAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACH,GAdM,CAAP;AAeH,CAhBM;AAkBP,OAAO,MAAM+B,SAAS,GAAG,CAACd,MAAD,EAASC,KAAT,EAAgBQ,MAAhB,EAAwBI,OAAxB,KAAoC;AACzD,SAAOzC,KAAK,CAAC,iBAAD,EAAoB;AAC5BC,IAAAA,MAAM,EAAE,KADoB;AAE5BC,IAAAA,OAAO,EAAE;AACLC,MAAAA,MAAM,EAAE,kBADH;AAEL,sBAAgB,kBAFX;AAGL2B,MAAAA,aAAa,mBAAYD,KAAZ;AAHR,KAFmB;AAO5BzB,IAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AAACsB,MAAAA,MAAD;AAASS,MAAAA,MAAT;AAAiBI,MAAAA;AAAjB,KAAf;AAPsB,GAApB,CAAL,CASNlC,IATM,CASDwB,QAAQ,IAAI;AACd,WAAOA,QAAQ,CAACtB,IAAT,EAAP;AACH,GAXM,EAYNC,KAZM,CAYAC,GAAG,IAAI;AACVC,IAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACH,GAdM,CAAP;AAeH,CAhBM;AAkBP,OAAO,MAAMgC,MAAM,GAAG,CAACf,MAAD,EAASC,KAAT,EAAgBe,QAAhB,KAA6B;AAC/C,SAAO5C,KAAK,WAAI6C,OAAO,CAACC,GAAR,CAAYC,iBAAhB,mBAAiD;AACzD9C,IAAAA,MAAM,EAAE,KADiD;AAEzDC,IAAAA,OAAO,EAAE;AACLC,MAAAA,MAAM,EAAE,kBADH;AAEL,sBAAgB,kBAFX;AAGL2B,MAAAA,aAAa,mBAAYD,KAAZ;AAHR,KAFgD;AAOzDzB,IAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AAAEsB,MAAAA,MAAF;AAAUgB,MAAAA;AAAV,KAAf;AAPmD,GAAjD,CAAL,CASFrC,IATE,CASGwB,QAAQ,IAAI;AACd,WAAOA,QAAQ,CAACtB,IAAT,EAAP;AACH,GAXE,EAYFC,KAZE,CAYIC,GAAG,IAAIC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CAZX,CAAP;AAaH,CAdM;AAgBP,OAAO,MAAMqC,QAAQ,GAAG,CAACpB,MAAD,EAASC,KAAT,EAAgBoB,UAAhB,KAA+B;AACnD,SAAOjD,KAAK,WAAI6C,OAAO,CAACC,GAAR,CAAYC,iBAAhB,qBAAmD;AAC3D9C,IAAAA,MAAM,EAAE,KADmD;AAE3DC,IAAAA,OAAO,EAAE;AACLC,MAAAA,MAAM,EAAE,kBADH;AAEL,sBAAgB,kBAFX;AAGL2B,MAAAA,aAAa,mBAAYD,KAAZ;AAHR,KAFkD;AAO3DzB,IAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AAAEsB,MAAAA,MAAF;AAAUqB,MAAAA;AAAV,KAAf;AAPqD,GAAnD,CAAL,CASF1C,IATE,CASGwB,QAAQ,IAAI;AACd,WAAOA,QAAQ,CAACtB,IAAT,EAAP;AACH,GAXE,EAYFC,KAZE,CAYIC,GAAG,IAAIC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CAZX,CAAP;AAaH,CAdM","sourcesContent":["export const signup = User => {\n    return fetch(\"/signup\", {\n        method: \"POST\",\n        headers: {\n            Accept: \"application/json\",\n            \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(User)\n    })\n    .then(data => {\n        return data.json();\n    })\n    .catch(err => console.log(err));\n};\n\nexport const signin = User => {\n    return fetch(\"/signin\", {\n        method: \"POST\",\n        headers: {\n            Accept: \"application/json\",\n            \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(User)\n    })\n    .then(data => {\n        return data.json();\n    })\n    .catch(err => console.log(err));\n}\n\nexport const Signout = (next) =>  {\n    if(typeof window !== \"undefined\") {\n        localStorage.removeItem(\"jwt\");\n        next();\n    }\n    return fetch(\"/signout\", {\n        method: \"GET\"\n    }).then(data => {\n        console.log(\"signout\", data);\n        return data.json();\n    })\n    .catch(err => console.log(err))\n}\n\nexport const authenciate = (jwt, next) => {\n    if(typeof window !== \"undefined\") {\n        localStorage.setItem(\"jwt\", JSON.stringify(jwt));\n        next();\n    }\n}\n\nexport const isAuthenciate = () => {\n    if(typeof window == \"undefined\") {\n        return false;\n    }\n\n    if(localStorage.getItem(\"jwt\")) {\n        return JSON.parse(localStorage.getItem(\"jwt\"))\n    }else {\n        return false;\n    }\n}\n\nexport const user = () => {\n    return fetch('/user', {\n        method: \"GET\",\n    }).then(data =>  {\n        return data.json();\n    });\n}\n\nexport const read = (userId, token) => {\n    return fetch(`/user/${userId}`, {\n        method: \"GET\",\n        headers: {\n            Accept: \"application/json\",\n            \"Content-Type\": \"application/json\",\n            Authorization: `Bearer ${token}` \n        },\n    })\n    .then(response => {\n        return response.json();\n    });\n};\n\nexport const edit = (userId, token, user) => {\n    console.log(\"User Data Update\", user)\n    return fetch(`/user/${userId}`, {\n        method: \"PUT\",\n        headers: {\n            Accept: \"application/json\",\n            Authorization: `Bearer ${token}` \n        },\n        body: user \n    })\n    .then(response => {\n        return response.json();\n    })\n    .catch(err => {\n        console.log(err);\n    })\n};\n\n//post\n\nexport const post = (Post, userId, token) => {\n    console.log(Post);\n    return fetch(`/post/new/${userId}`, {\n        method: \"POST\",\n        headers: {\n            Accept: \"application/json\",\n            Authorization: `Bearer ${token}`             \n        },\n        body: Post\n    })\n    .then(data => {\n        return data.json();\n    })\n    .catch(err => {\n        console.log(err);\n    });\n}\n\nexport const allpost = () => {\n    return fetch('/post', {\n        method: \"GET\",\n    })\n    .then(data => {\n        return data.json();\n    });\n}\n\nexport const singlePost = postId => {\n    return fetch(`/post/${postId}`, {\n        method: \"GET\"\n    })\n    .then(response => {\n        return response.json();\n    })\n    .catch(err => console.log(err));\n};\n\nexport const postByUser = userId => {\n    return fetch(`/user/post/${userId}`, {\n        method: \"GET\"\n    })\n    .then(response => {\n        return response.json();\n    })\n    .catch(err => console.log(err));\n}\n\nexport const like = (userId, token, postId) => {\n    return fetch(\"/post/likes\", {\n        method: \"PUT\",\n        headers: {\n            Accept: \"application/json\",\n            \"Content-Type\": \"application/json\",\n            Authorization: `Bearer ${token}` \n        },\n        body: JSON.stringify({userId, postId}) \n    })\n    .then(response => {\n        return response.json();\n    })\n    .catch(err => {\n        console.log(err);\n    });\n};\n\nexport const unlike = (userId, token, postId) => {\n    return fetch(\"/post/unlikes\", {\n        method: \"PUT\",\n        headers: {\n            Accept: \"application/json\",\n            \"Content-Type\": \"application/json\",\n            Authorization: `Bearer ${token}` \n        },\n        body: JSON.stringify({userId, postId}) \n    })\n    .then(response => {\n        return response.json();\n    })\n    .catch(err => {\n        console.log(err);\n    })\n};\n\nexport const comment = (userId, token, postId, comment) => {\n    return fetch(\"/post/comment\", {\n        method: \"PUT\",\n        headers: {\n            Accept: \"application/json\",\n            \"Content-Type\": \"application/json\",\n            Authorization: `Bearer ${token}` \n        },\n        body: JSON.stringify({userId, postId, comment}) \n    })\n    .then(response => {\n        return response.json();\n    })\n    .catch(err => {\n        console.log(err);\n    });\n};\n\nexport const uncomment = (userId, token, postId, comment) => {\n    return fetch(\"/post/uncomment\", {\n        method: \"PUT\",\n        headers: {\n            Accept: \"application/json\",\n            \"Content-Type\": \"application/json\",\n            Authorization: `Bearer ${token}` \n        },\n        body: JSON.stringify({userId, postId, comment}) \n    })\n    .then(response => {\n        return response.json();\n    })\n    .catch(err => {\n        console.log(err);\n    })\n};\n\nexport const follow = (userId, token, followId) => {\n    return fetch(`${process.env.REACT_APP_API_URL}/user/follow`, {\n        method: \"PUT\",\n        headers: {\n            Accept: \"application/json\",\n            \"Content-Type\": \"application/json\",\n            Authorization: `Bearer ${token}`\n        },\n        body: JSON.stringify({ userId, followId })\n    })\n        .then(response => {\n            return response.json();\n        })\n        .catch(err => console.log(err));\n};\n\nexport const unfollow = (userId, token, unfollowId) => {\n    return fetch(`${process.env.REACT_APP_API_URL}/user/unfollow`, {\n        method: \"PUT\",\n        headers: {\n            Accept: \"application/json\",\n            \"Content-Type\": \"application/json\",\n            Authorization: `Bearer ${token}`\n        },\n        body: JSON.stringify({ userId, unfollowId })\n    })\n        .then(response => {\n            return response.json();\n        })\n        .catch(err => console.log(err));\n};\n"]},"metadata":{},"sourceType":"module"}