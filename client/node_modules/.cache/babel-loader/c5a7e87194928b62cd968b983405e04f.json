{"ast":null,"code":"var _jsxFileName = \"/home/subhash/Documents/last/lst_2/client/src/core/Userpost.js\";\nimport React, { Component } from 'react';\nimport { isAuthenciate, like, unlike, singlePost, comment } from '../auth/index';\nimport { Link, Redirect } from 'react-router-dom';\nimport Comment from './Comment';\n\nclass Userpost extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      post: '',\n      redirectToHome: false,\n      redirectToSignin: false,\n      like: false,\n      likes: 0\n    };\n\n    this.checkLike = likes => {\n      const userId = isAuthenciate() && isAuthenciate().user._id;\n\n      let match = likes.indexOf(userId) !== -1;\n      return match;\n    };\n\n    this.componentDidMount = () => {\n      const postId = this.props.match.params.postId;\n      singlePost(postId).then(data => {\n        if (data.error) {\n          console.log(data.error);\n        } else {\n          this.setState({\n            post: data,\n            likes: data.likes.length,\n            like: this.checkLike(data.likes),\n            comments: data.comments\n          });\n        }\n      });\n    };\n\n    this.updateComments = comments => {\n      this.setState({\n        comments: comment\n      });\n    };\n\n    this.likeToggle = () => {\n      if (!isAuthenciate()) {\n        this.setState({\n          redirectToSignin: true\n        });\n        return false;\n      }\n\n      let callApi = this.state.like ? unlike : like;\n\n      const userId = isAuthenciate().user._id;\n\n      const postId = this.state.post._id;\n      const token = isAuthenciate().token;\n      callApi(userId, token, postId).then(data => {\n        if (data.error) {\n          console.log(data.error);\n        } else {\n          this.setState({\n            like: !this.state.like,\n            likes: data.likes.length\n          });\n        }\n      });\n    };\n\n    this.renderPost = post => {\n      const posterId = post.postedBy ? \"/user/\".concat(post.postedBy._id) : '';\n      const posterName = post.postedBy ? post.postedBy.name : ' Unknown';\n      const _this$state = this.state,\n            like = _this$state.like,\n            likes = _this$state.likes;\n      return React.createElement(\"div\", {\n        className: \"card-body\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        src: \"/post/photo/\".concat(post._id),\n        alt: post.title,\n        onError: i => i.target.src = \"https://i.stack.imgur.com/l60Hf.pnghttps://i.stack.imgur.com/l60Hf.png\",\n        className: \"img-thunbnail mb-3\",\n        style: {\n          height: '300px',\n          width: '100%',\n          objectFit: 'cover'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }), like ? React.createElement(\"h3\", {\n        onClick: this.likeToggle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"fa fa-thumbs-up text-success bg-dark\",\n        style: {\n          padding: '10px',\n          borderRadius: '50%'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      }), ' ', likes, \" Like\") : React.createElement(\"h3\", {\n        onClick: this.likeToggle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"fa fa-thumbs-up text-warning bg-dark\",\n        style: {\n          padding: '10px',\n          borderRadius: '50%'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      }), ' ', likes, \" Like\"), React.createElement(\"p\", {\n        className: \"card-text\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101\n        },\n        __self: this\n      }, post.body), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102\n        },\n        __self: this\n      }), React.createElement(\"p\", {\n        className: \"font-italic mark\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103\n        },\n        __self: this\n      }, \"Posted by \", React.createElement(Link, {\n        to: \"\".concat(posterId),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104\n        },\n        __self: this\n      }, posterName, \" \"), \"on \", new Date(post.created).toDateString()), React.createElement(\"div\", {\n        className: \"d-inline-block\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107\n        },\n        __self: this\n      }, React.createElement(Link, {\n        to: \"/\",\n        className: \"btn btn-raised btn-primary btn-sm mr-5\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108\n        },\n        __self: this\n      }, \"Back to posts\"), isAuthenciate().user && isAuthenciate().user._id === post.postedBy._id && React.createElement(React.Fragment, null, React.createElement(Link, {\n        to: \"/post/edit/\".concat(post._id),\n        className: \"btn btn-raised btn-warning btn-sm mr-5\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114\n        },\n        __self: this\n      }, \"Update Post\"), React.createElement(\"button\", {\n        onClick: this.deleteConfirmed,\n        className: \"btn btn-raised btn-danger\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117\n        },\n        __self: this\n      }, \"Delete Post\")), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123\n        },\n        __self: this\n      }, isAuthenciate().user && isAuthenciate().user.role === 'admin' && React.createElement(\"div\", {\n        class: \"card mt-5\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"card-body\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126\n        },\n        __self: this\n      }, React.createElement(\"h5\", {\n        className: \"card-title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127\n        },\n        __self: this\n      }, \"Admin\"), React.createElement(\"p\", {\n        className: \"mb-2 text-danger\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128\n        },\n        __self: this\n      }, \"Edit/Delete as an Admin\"), React.createElement(Link, {\n        to: \"/post/edit/\".concat(post._id),\n        className: \"btn btn-raised btn-warning btn-sm mr-5\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129\n        },\n        __self: this\n      }, \"Update Post\"), React.createElement(\"button\", {\n        onClick: this.deleteConfirmed,\n        className: \"btn btn-raised btn-danger\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135\n        },\n        __self: this\n      }, \"Delete Post\"))))));\n    };\n  }\n\n  render() {\n    const _this$state2 = this.state,\n          post = _this$state2.post,\n          redirectToHome = _this$state2.redirectToHome,\n          redirectToSignin = _this$state2.redirectToSignin;\n\n    if (redirectToHome) {\n      return React.createElement(Redirect, {\n        to: \"/\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 151\n        },\n        __self: this\n      });\n    } else if (redirectToSignin) {\n      return React.createElement(Redirect, {\n        to: \"/signin\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 153\n        },\n        __self: this\n      });\n    }\n\n    return React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      className: \"display-2 mt-5 mb-5\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158\n      },\n      __self: this\n    }, post.title), !post ? React.createElement(\"div\", {\n      className: \"jumbotron text-center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162\n      },\n      __self: this\n    }, \"Loading...\")) : this.renderPost(post), React.createElement(Comment, {\n      postId: post._id,\n      comments: comments,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default Userpost;","map":{"version":3,"sources":["/home/subhash/Documents/last/lst_2/client/src/core/Userpost.js"],"names":["React","Component","isAuthenciate","like","unlike","singlePost","comment","Link","Redirect","Comment","Userpost","state","post","redirectToHome","redirectToSignin","likes","checkLike","userId","user","_id","match","indexOf","componentDidMount","postId","props","params","then","data","error","console","log","setState","length","comments","updateComments","likeToggle","callApi","token","renderPost","posterId","postedBy","posterName","name","title","i","target","src","height","width","objectFit","padding","borderRadius","body","Date","created","toDateString","deleteConfirmed","role","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { isAuthenciate, like, unlike, singlePost, comment } from '../auth/index';\nimport { Link, Redirect } from 'react-router-dom';\nimport Comment  from './Comment';\n\nclass Userpost extends Component {\n    state = {\n        post: '',\n        redirectToHome: false,\n        redirectToSignin: false,\n        like: false,\n        likes: 0,\n    };\n\n    checkLike = likes => {\n        const userId = isAuthenciate() && isAuthenciate().user._id;\n        let match = likes.indexOf(userId) !== -1;\n        return match;\n    };\n\n    componentDidMount = () => {\n        const postId = this.props.match.params.postId;\n        singlePost(postId).then(data => {\n            if (data.error) {\n                console.log(data.error);\n            } else {\n                this.setState({\n                    post: data,\n                    likes: data.likes.length,\n                    like: this.checkLike(data.likes),\n                    comments: data.comments\n                });\n            }\n        });\n    };\n\n    updateComments = comments => {\n        this.setState({ comments: comment})\n    }\n\n    likeToggle = () => {\n        if (!isAuthenciate()) {\n            this.setState({ redirectToSignin: true });\n            return false;\n        }\n        let callApi = this.state.like ? unlike : like;\n        const userId = isAuthenciate().user._id;\n        const postId = this.state.post._id;\n        const token = isAuthenciate().token;\n\n        callApi(userId, token, postId).then(data => {\n            if (data.error) {\n                console.log(data.error);\n            } else {\n                this.setState({\n                    like: !this.state.like,\n                    likes: data.likes.length\n                });\n            }\n        });\n    };\n\n    renderPost = post => {\n        const posterId = post.postedBy ? `/user/${post.postedBy._id}` : '';\n        const posterName = post.postedBy ? post.postedBy.name : ' Unknown';\n\n        const { like, likes } = this.state;\n\n        return (\n            <div className=\"card-body\">\n                <img\n                    src={`/post/photo/${post._id}`}\n                    alt={post.title}\n                    onError={i => (i.target.src = \"https://i.stack.imgur.com/l60Hf.pnghttps://i.stack.imgur.com/l60Hf.png\")}\n                    className=\"img-thunbnail mb-3\"\n                    style={{\n                        height: '300px',\n                        width: '100%',\n                        objectFit: 'cover'\n                    }}\n                />\n\n                {like ? (\n                    <h3 onClick={this.likeToggle}>\n                        <i\n                            className=\"fa fa-thumbs-up text-success bg-dark\"\n                            style={{ padding: '10px', borderRadius: '50%' }}\n                        />{' '}\n                        {likes} Like\n                    </h3>\n                ) : (\n                    <h3 onClick={this.likeToggle}>\n                        <i\n                            className=\"fa fa-thumbs-up text-warning bg-dark\"\n                            style={{ padding: '10px', borderRadius: '50%' }}\n                        />{' '}\n                        {likes} Like\n                    </h3>\n                )}\n\n                <p className=\"card-text\">{post.body}</p>\n                <br />\n                <p className=\"font-italic mark\">\n                    Posted by <Link to={`${posterId}`}>{posterName} </Link>\n                    on {new Date(post.created).toDateString()}\n                </p>\n                <div className=\"d-inline-block\">\n                    <Link to={`/`} className=\"btn btn-raised btn-primary btn-sm mr-5\">\n                        Back to posts\n                    </Link>\n\n                    {isAuthenciate().user && isAuthenciate().user._id === post.postedBy._id && (\n                        <>\n                            <Link to={`/post/edit/${post._id}`} className=\"btn btn-raised btn-warning btn-sm mr-5\">\n                                Update Post\n                            </Link>\n                            <button onClick={this.deleteConfirmed} className=\"btn btn-raised btn-danger\">\n                                Delete Post\n                            </button>\n                        </>\n                    )}\n\n                    <div>\n                        {isAuthenciate().user && isAuthenciate().user.role === 'admin' && (\n                            <div class=\"card mt-5\">\n                                <div className=\"card-body\">\n                                    <h5 className=\"card-title\">Admin</h5>\n                                    <p className=\"mb-2 text-danger\">Edit/Delete as an Admin</p>\n                                    <Link\n                                        to={`/post/edit/${post._id}`}\n                                        className=\"btn btn-raised btn-warning btn-sm mr-5\"\n                                    >\n                                        Update Post\n                                    </Link>\n                                    <button onClick={this.deleteConfirmed} className=\"btn btn-raised btn-danger\">\n                                        Delete Post\n                                    </button>\n                                </div>\n                            </div>\n                        )}\n                    </div>\n                </div>\n            </div>\n        );\n    };\n\n    render() {\n        const { post, redirectToHome, redirectToSignin } = this.state;\n\n        if (redirectToHome) {\n            return <Redirect to={`/`} />;\n        } else if (redirectToSignin) {\n            return <Redirect to={`/signin`} />;\n        }\n\n        return (\n            <div className=\"container\">\n                <h2 className=\"display-2 mt-5 mb-5\">{post.title}</h2>\n\n                {!post ? (\n                    <div className=\"jumbotron text-center\">\n                        <h2>Loading...</h2>\n                    </div>\n                ) : (\n                    this.renderPost(post)\n                )} \n\n                <Comment postId={post._id} comments={comments} />\n            </div>\n        );\n    }\n}\n\nexport default Userpost;"]},"metadata":{},"sourceType":"module"}